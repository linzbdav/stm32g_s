PREFIX ?= arm-none-eabi
FOLDER ?= /home/david/Entwicklung/STM32/Projects


CC	= $(PREFIX)-gcc
LD	= $(PREFIX)-gcc
OBJCOPY	= $(PREFIX)-objcopy
OBJDUMP	= $(PREFIX)-objdump
GDB	= $(PREFIX)-gdb
SIZE = $(PREFIX)-size
FLASH	= /home/david/Entwicklung/stlink/st-flash
#$(shell which st-flash)

TOOLCHAIN_DIR ?= ../libopencm3
SRCLIBDIR ?= $(TOOLCHAIN_DIR)

BUILD_NUMBER_FILE=build-number.txt

$(info tool $(TOOLCHAIN_DIR))

CFLAGS += 	-Os -g -std=gnu99 \
			-Wall -Wextra -Wimplicit-function-declaration \
			-Wredundant-decls \
			-Wundef -Wshadow \
			-Wno-unused-variable -Wno-unused-parameter \
			-I$(TOOLCHAIN_DIR)/include \
			-fno-common \
			-ffunction-sections -fdata-sections \
			-MD
LDSCRIPT ?= $(BINARY).ld
LDFLAGS += 	--static -lc -lm -lnosys -L$(TOOLCHAIN_DIR)/lib \
			--specs=nano.specs -u _printf_float\
			-L$(TOOLCHAIN_DIR)/lib/stm32/f0 \
			-L lib \
			-T$(LDSCRIPT) -nostartfiles -Wl,--gc-sections
OBJS += 	$(BINARY).o
CLEAN += 	$(OBJS) $(OBJS:.o=.d)

# OOCD ?= 	openocd
# OOCD_INTERFACE ?= flossjtag
# OOCD_BOARD ?= olimex_stm32_h103
# Black magic probe specific variables
# Set the BMP_PORT to a serial port and then BMP is used for flashing
BMP_PORT ?=

# Be silent per default, but 'make V=1' will show all compiler calls.
ifneq ($(V),1)
Q := @
NULL := 2>/dev/null
else
LDFLAGS += -Wl,--print-gc-sections
endif

SRCDIR = 
OBJDIR = ../obj
BINDIR = ../bin

vpath %.c $(SRCDIR)
#vpath %.o $(OBJDIR)

SOURCES := $(patsubst %,$(SRCDIR)/%,$(SRCS))
INCLUDES:= $(wildcard $(SRCDIR)/*.h)
OBJECTS := $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)

ELFFILE := $(BINDIR)/$(BINARY).elf
BINFILE := $(BINDIR)/$(BINARY).bin
HEXFILE := $(BINDIR)/$(BINARY).hex
RECFILE := $(BINDIR)/$(BINARY).srec
LISFILE := $(BINDIR)/$(BINARY).list
IMAFILE := $(BINDIR)/$(BINARY).images

.SUFFIXES: .elf .bin .hex .srec .list .images
.SECONDEXPANSION:
.SECONDARY:

all: images

include $(TOOLCHAIN_DIR)/ld/Makefile.linker

images: $(BINDIR)/$(BINARY).images
flash: $(BINARY).stlink-flash

#%.images: %.bin %.hex %.srec %.list
#	@#echo "*** $* images generated ***"

$(BINDIR)/%.images: $(ELFFILE) $(BINFILE) $(HEXFILE) $(RECFILE) $(LISFILE)
	@echo "*** $* images generated ***"

$(BINFILE): $(ELFFILE)
	@#printf " OBJCOPY $(*).bin\n"
	$(Q)$(OBJCOPY) -Obinary $(*).elf $(*).bin

$(HEXFILE): $(ELFFILE)
	@#printf " OBJCOPY $(*).hex\n"
	$(Q)$(OBJCOPY) -Oihex $(*).elf $(*).hex

$(RECFILE): $(ELFFILE)
	@#printf " OBJCOPY $(*).srec\n"
	$(Q)$(OBJCOPY) -Osrec $(*).elf $(*).srec

$(LISFILE): $(ELFFILE)
	@#printf " OBJDUMP $(*).list\n"
	$(Q)$(OBJDUMP) -S $(*).elf > $(*).list

$(ELFFILE): $(OBJECTS) $(LDSCRIPT) $(TOOLCHAIN_DIR)/lib/libopencm3_stm32f0.a $(BUILD_NUMBER_FILE)
	@printf " LD $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(LD) -o $(*).elf $(OBJECTS) -lopencm3_stm32f0 $(LDFLAGS) $(BUILD_NUMBER_LDFLAGS)
	$(SIZE) $(*).elf

$(OBJECTS): $(OBJDIR)/%.o: $(SRCDIR)/%.c
	@printf " CC $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(CC) $(CFLAGS) -o $@ -c $<
	

clean:
	$(Q)rm -f $(OBJDIR)/*.o
	$(Q)rm -f $(OBJDIR)/*.d
	$(Q)rm -f $(BINDIR)/*.elf
	$(Q)rm -f $(BINDIR)/*.bin
	$(Q)rm -f $(BINDIR)/*.hex
	$(Q)rm -f $(BINDIR)/*.srec
	$(Q)rm -f $(BINDIR)/*.list
	$(Q)rm -f $(OBJDIR)/*/*.o
	$(Q)rm -f $(OBJDIR)/*/*.d
	$(Q)rm -f $(CLEAN)

%.stlink-flash: bin/%.bin
	@printf " FLASH $<\n"
	$(Q)$(FLASH) write $(*).bin 0x8000000


ifeq ($(BMP_PORT),)
ifeq ($(OOCD_SERIAL),)
%.flash: %.hex
	@printf " FLASH $<\n"
	@# IMPORTANT: Don't use "resume", only "reset" will work correctly!
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		-f board/$(OOCD_BOARD).cfg \
		-c "init" -c "reset init" \
		-c "flash write_image erase $(*).hex" \
		-c "reset" \
		-c "shutdown" $(NULL)
else
%.flash: %.hex
	@printf " FLASH $<\n"
	@# IMPORTANT: Don't use "resume", only "reset" will work correctly!
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		-f board/$(OOCD_BOARD).cfg \
		-c "ft2232_serial $(OOCD_SERIAL)" \
		-c "init" -c "reset init" \
		-c "stm32x mass_erase 0" \
		-c "flash write_image $(*).hex" \
		-c "reset" \
		-c "shutdown" $(NULL)
endif
else
%.flash: %.elf
	@echo " GDB $(*).elf (flash)"
	$(Q)$(GDB) --batch \
		-ex 'target extended-remote $(BMP_PORT)' \
		-x $(TOOLCHAIN_DIR)/scripts/black_magic_probe_flash.scr \
	$(*).elf
endif

.PHONY: images clean

-include $(OBJS:.o=.d)

# Create an auto-incrementing build number.
include buildnumber.mak
